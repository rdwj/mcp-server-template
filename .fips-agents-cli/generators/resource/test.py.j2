"""Tests for {{ component_name }} resource."""

import pytest
from src.resources.{{ component_name }} import {{ component_name }}

# Access the underlying function for testing (FastMCP decorator pattern)
{{ component_name }}_fn = {{ component_name }}.fn


{% if async %}@pytest.mark.asyncio
async def test_{{ component_name }}_returns_content():
{% else %}def test_{{ component_name }}_returns_content():
{% endif %}    """Test {{ component_name }} returns content."""
{% if params|length > 0 %}    # TODO: Provide actual parameter values
{% for param in params %}    {{ param.name }} = "test_{{ param.name }}"  # Replace with actual test value
{% endfor %}    result = {% if async %}await {% endif %}{{ component_name }}_fn({% for param in params %}{{ param.name }}{% if not loop.last %}, {% endif %}{% endfor %})
{% else %}    result = {% if async %}await {% endif %}{{ component_name }}_fn()
{% endif %}

    # TODO: Add specific assertions
    assert result is not None
    assert isinstance(result, str)
{% if mime_type == "application/json" %}
    # Test JSON parsing
    import json
    data = json.loads(result)
    assert isinstance(data, dict)
{% endif %}


{% if async %}@pytest.mark.asyncio
async def test_{{ component_name }}_content_structure():
{% else %}def test_{{ component_name }}_content_structure():
{% endif %}    """Test {{ component_name }} content structure."""
{% if params|length > 0 %}    # TODO: Provide actual parameter values
{% for param in params %}    {{ param.name }} = "test_{{ param.name }}"  # Replace with actual test value
{% endfor %}    result = {% if async %}await {% endif %}{{ component_name }}_fn({% for param in params %}{{ param.name }}{% if not loop.last %}, {% endif %}{% endfor %})
{% else %}    result = {% if async %}await {% endif %}{{ component_name }}_fn()
{% endif %}

    # TODO: Test content structure
{% if mime_type == "application/json" %}    import json
    data = json.loads(result)
    # Add assertions about expected keys/structure
    # assert "key" in data
{% else %}    # Add assertions about expected content
    # assert "expected_content" in result
{% endif %}    pass
